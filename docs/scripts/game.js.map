{
  "version": 3,
  "sources": [
    "node_modules/browser-pack/_prelude.js",
    "/Users/adam/Desktop/projects/web/phaser/dig/src/index.js",
    "/Users/adam/Desktop/projects/web/phaser/dig/src/objects/ActiveTool.js",
    "/Users/adam/Desktop/projects/web/phaser/dig/src/states/Boot.js",
    "/Users/adam/Desktop/projects/web/phaser/dig/src/states/GameOver.js",
    "/Users/adam/Desktop/projects/web/phaser/dig/src/states/GameTitle.js",
    "/Users/adam/Desktop/projects/web/phaser/dig/src/states/Main.js",
    "/Users/adam/Desktop/projects/web/phaser/dig/src/states/Preload.js"
  ],
  "names": [],
  "mappings": "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",
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "import Boot from 'states/Boot';\nimport Preload from 'states/Preload';\nimport GameTitle from 'states/GameTitle';\nimport Main from 'states/Main';\nimport GameOver from 'states/GameOver';\n\nclass Game extends Phaser.Game {\n\n\tconstructor() {\n\n\t\t// super(window.innerWidth * window.devicePixelRatio, window.innerHeight * window.devicePixelRatio, Phaser.AUTO);\n        super(800 * window.devicePixelRatio, 600 * window.devicePixelRatio, Phaser.AUTO);\n\n\t\tthis.state.add('Boot', Boot, false);\n\t\tthis.state.add('Preload', Preload, false);\n\t\tthis.state.add('GameTitle', GameTitle, false);\n\t\tthis.state.add('Main', Main, false);\n\t\tthis.state.add('GameOver', GameOver, false);\n\n\t\tthis.state.start('Boot');\n\t}\n\n}\n\nnew Game();",
    "class ActiveTool {\n\n    constructor(game,tool){\n        //Do something\n        this.button = game.add.button(game.world.centerX - 95, 400, tool, this.actionOnClick, this, 1, 0, 2);\n\n        this.button.onInputOver.add(this.over, this);\n        this.button.onInputOut.add(this.out, this);\n        this.button.onInputUp.add(this.up, this);\n    }\n\n    up() {\n        console.log('button up', arguments);\n    }\n\n    over() {\n        console.log('button over');\n    }\n\n    out() {\n        console.log('button out');\n    }\n\n    actionOnClick() {\n        console.log('actionOnClick Fired');\n    }\n\n}\n\nexport default ActiveTool;",
    "class Boot extends Phaser.State {\n\n    preload() {\n\n    }\n\n    create() {\n        this.scale.pageAlignHorizontally = true;\n        this.scale.pageAlignVertically = true;\n        this.scale.scaleMode = Phaser.ScaleManager.SHOW_ALL;\n        this.game.state.start(\"Preload\");\n    }\n\n}\n\nexport default Boot;",
    "class GameOver extends Phaser.State {\n\n\tcreate() {\n\n\t}\n\n\trestartGame() {\n\t\tthis.game.state.start(\"Main\");\n\t}\n\n}\n\nexport default GameOver;\n",
    "class GameTitle extends Phaser.State {\n\n    create() {\n\n    }\n\n    startGame() {\n        this.game.state.start(\"Main\");\n    }\n\n}\n\nexport default GameTitle;\n",
    "// import ExampleObject from 'objects/ExampleObject';\nimport ActiveTool from 'objects/ActiveTool';\n\nclass Main extends Phaser.State {\n\n    constructor(props) {\n        super(props);\n\n        this.player;\n        this.cursors;\n\n        this.map;\n        this.backgroundlayer;\n        this.treeLayer;\n        this.dirtLayer;\n        this.lakeLayer;\n        this.shrubsLayer;\n        this.objectLayer;\n        this.respawnGrp;\n        this.digSitesGrp;\n    }\n\n    create() {\n\n        //Enable Arcade Physics\n        this.game.physics.startSystem(Phaser.Physics.ARCADE);\n        //Set the games background colour\n        this.game.stage.backgroundColor = '#357736';\n\n        this.respawnGrp = this.game.add.group();\n\n        this.map = this.game.add.tilemap('tilemapJson_map1');\n        // the first parameter is the tileset name as specified in Tiled, the second is the key to the asset\n        this.map.addTilesetImage('dig_terrainTileset', 'tiles_map1');\n        // create layer\n        this.backgroundlayer = this.map.createLayer('background');\n        this.treeLayer = this.map.createLayer('trees');\n        this.dirtLayer = this.map.createLayer('dirt');\n        this.lakeLayer = this.map.createLayer('lake');\n        this.shrubsLayer = this.map.createLayer('shrubs');\n        // this.objectLayer = this.map.createLayer('objectLayer');\n        // collision on blockedLayer\n        this.map.setCollisionBetween(0, 400, true, 'trees');\n        this.map.setCollisionBetween(0, 400, true, 'lake');\n        // creat the spawn point\n        this.map.createFromObjects('objectLayer',26,'',0,true,false,this.respawnGrp);\n        // resizes the game world to match the layer dimensions\n        this.backgroundlayer.resizeWorld();\n\n        this.createDigSites();\n\n        this.player = this.game.add.sprite(0, 0, 'player');\n        this.spawn();\n        this.player.animations.add('up',    [9,10,11], 10, true);\n        this.player.animations.add('down',  [0,1,2], 10, true);\n        this.player.animations.add('left',  [3,4,5], 10, true);\n        this.player.animations.add('right', [6,7,8], 10, true);\n        this.player.scale.setTo(0.75,0.75);\n\n        this.game.physics.arcade.enable(this.player);\n        this.player.body.collideWorldBounds = true;\n        this.game.physics.arcade.collide(this.player, this.treeGroup);\n\n        this.cursors = this.game.input.keyboard.createCursorKeys();\n        this.game.camera.follow(this.player);\n\n        this.activeTool = new ActiveTool(this.game, 'hammer-pick');\n\n\n        //Example of including an object\n        //let exampleObject = new ExampleObject(this.game);\n    }\n\n    update() {\n        let VELOCITY = 200;\n        let MAX_VELOCITY = 200;\n        this.player.body.maxVelocity.x = MAX_VELOCITY;\n        this.player.body.maxVelocity.y = MAX_VELOCITY;\n        if (this.cursors.left.isDown) {\n            this.player.body.velocity.x -= VELOCITY;\n            this.player.body.velocity.y = 0;\n            this.player.animations.play('left');\n        } else if (this.cursors.right.isDown) {\n            this.player.body.velocity.x += VELOCITY;\n            this.player.body.velocity.y = 0;\n            this.player.animations.play('right');\n        } else if (this.cursors.up.isDown) {\n            this.player.body.velocity.y -= VELOCITY;\n            this.player.body.velocity.x = 0;\n            this.player.animations.play('up');\n        } else if (this.cursors.down.isDown) {\n            this.player.body.velocity.y += VELOCITY;\n            this.player.body.velocity.x = 0;\n            this.player.animations.play('down');\n        } else {\n            this.player.animations.stop();\n            this.player.frame = 1;\n            this.player.body.velocity.x = 0;\n            this.player.body.velocity.y = 0;\n        }\n        this.game.physics.arcade.collide(this.player, this.treeLayer);\n        this.game.physics.arcade.collide(this.player, this.lakeLayer);\n    }\n\n    spawn() {\n        this.respawnGrp.forEach(spawnPoint => {\n            this.player.reset(spawnPoint.x, spawnPoint.y);\n        })\n    }\n\n    createDigSites() {\n        //create items\n        this.digSitesGrp = this.game.add.group();\n        this.digSitesGrp.enableBody = true;\n        let digSitesArray = this.findObjectsByType('sprite', this.map, 'objectLayer');\n        digSitesArray.forEach(digSite => {\n            this.createFromTiledObject(digSite, this.digSitesGrp);\n        }, this);\n    }\n\n    //find objects in a Tiled layer that containt a property called \"type\" equal to a certain value\n    findObjectsByType(type,map,layer) {\n        let result = [];\n        map.objects[layer].forEach(element => {\n            if (element.properties && element.properties.type === type) {\n                //Phaser uses top left, Tiled bottom left so we have to adjust\n                //also keep in mind that the cup images are a bit smaller than the tile which is 16x16\n                //so they might not be placed in the exact position as in Tiled\n                element.y -= map.tileHeight;\n                result.push(element);\n            }\n        });\n        return result;\n    }\n\n    //create a sprite from an object\n    createFromTiledObject(element, group) {\n        let sprite = group.create(element.x, element.y, element.properties.imageKey);\n\n        //copy all properties to the sprite\n        Object.keys(element.properties).forEach(key =>{\n            sprite[key] = element.properties[key];\n        });\n    }\n\n}\n\nexport default Main;\n",
    "class Preload extends Phaser.State {\n\n    preload() {\n        // this.preloadBar = this.add.sprite(this.game.world.centerX, this.game.world.centerY + 128, 'preloadbar');\n        // this.preloadBar.anchor.setTo(0.5);\n\n        // this.load.setPreloadSprite(this.preloadBar);\n\n        /* Preload required assets */\n        // player\n        this.game.load.spritesheet('player', '/assets/dig_joshua.png', 48,48);\n        // tools\n        this.game.load.spritesheet('hammer-pick', '/assets/hammer_pick.png', 48,48);\n        // maps stuff\n        this.game.load.tilemap('tilemapJson_map1', '/assets/map1.json', null, Phaser.Tilemap.TILED_JSON);\n        this.game.load.image('tiles_map1', '/assets/forest_tileset_16x16.png');\n        this.game.load.image('stones1', '/assets/stones1.png');\n        this.game.load.image('stones2', '/assets/stones2.png');\n\n        //this.game.load.audio('myAudio', '/assets/my-audio.wav');\n        //this.game.load.atlas('myAtlas', '/assets/my-atlas.png', 'assets/my-atlas.json');\n    }\n\n    create() {\n        //NOTE: Change to GameTitle if required\n        this.game.state.start(\"Main\");\n    }\n\n}\n\nexport default Preload;\n"
  ]
}